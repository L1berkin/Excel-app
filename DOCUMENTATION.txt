СТРУКТУРА ПРИЛОЖЕНИЯ:

// Основная информация

  // Наследование классов
  DomListener => ExcelComponent => components(Formula, Header, Table, Toolbar)

  Класс Excel рендерит страницу

  У всех классов компонентов есть статическое поле 'excel__name', где name является наванием компонентами

  '***' - Показывают вложенность папок, для лучшей читаемости

// ------------------------------------------------------------------------------------------------------ //

*src:

  **assets - ПАПКА с шаблонами страницы


  **components - ПАПКА с компонентами эксель таблицы

    ***excel - ПАПКА

      Excel.js - Экспортирует класс для динамического рендеринга основного содержимого веб-приложения
        !!! Экспортирует класс Excel(selector, options = [])
          передаются в options все классы эдементов в виде массива components и рендерятся в конец selector
          обязательно реализация у классов компонентов метода toHtml() и реализация метода html() в классе Dom

          методы:
            getRoot() - Создает с помощью $.create 'div.excel' коревой элемент $root
              создает html шаблон
              добавляет созданный шаблон в конец $root
              возвращает $root

            render() - Рендерит созданный элемент getRoot()
              вызывает у каждого элемента массива components метод init()

            destroy() - Удаляет все компоненты и события, слушатели, связанные с ними


    ***formula - ПАПКА
      Formula.js -
        !!! Экспортирует класс Formula($root) super {$root, options}}
        методы:
            toHTML() - возвращает html шаблон элемента
            init() - super.init() и добавляет все события на нее через $on
            onInput(event) - Реализует событие ввода
            onKeydown(event) - Реализует события нажатия клавиш


    ***header - ПАПКА
      Header.js -
        !!! Экспортирует класс Header
          методы:
            prepare() - вызывается до инициализации
            toHTML() возвращает html шаблон элемента
            onInput(event) - изменение названия


    ***table - ПАПКА
      Table.js -
        !!! Экспортирует класс Table
        методы:
            toHTML() - вызывает функцию createTable(), определенную в table.template.js
            prepare() - инициализирует класс TableSelection до инициализации самого компонентами
            init() - super.init() и выделяет первую ячейку и добавляет собыития через $on
            selectCell($cell) - Выделяет ячейку и добавляет необходимые события
            onMousedown(event) - создает всю динамику, работающие по mousedown
            onKeydown(event) - добавляет события на клавиши
            upadateTextInStore(value) - обновляет store
            inInput(event) - передает в store инфу об изменениях

      table.template.js -
        !!! Экспортирует функцию createTable(rowsCount = 15)
          содержит функции по работе с таблицей

      table.resize.js -
        !!! Экспортирует промис resizeHandler($root, event)
          содержит события по изменению размеров таблицы

      table.functions.js -
        !!! Экспортирует функцию shouldResize(event)
          содержит вспомогательные функции для упрощения работы с таблицей

      TableSelection.js - Вспомогательный класс для работы с выделением ячеек
        !!! Экспортирует класс TableSelection
        static className = 'selected
          методы:
            select($el) - Выделяет элемент
            clear() - Удаялет TableSelection.className
            get selectedIds() - возвращает id выделенных ячеек
            selectGroup($group = []) - выделяет группу ячеек
            applyStyle(style) - добавляет style выделенным ячейкам


    ***toolbar - ПАПКА
      Toolbar.js -
        !!! Экспортирует класс Toolbar($root, options) super {$root, options}
          методы:
            prepare() - вызывается до инициализации
            get template() - возвращает шаблон toolbar
            toHTML() возвращает this.template
            storeChanged(changes) - изменяет состояние, в зависимости от changes
            onClick(event) - событие клика на кнопку

      toolbar.template.js - 
        !!! Экспортирует функцию createToolbar(s)
          createToolbar(s) - создает шаблон toolbar, добавляя информацию для работы со state


  **core - ПАПКА с корневыми элементами

    createStore.js - создает store
      !!! Экспортирует функцию createStore(rootReducer, initialState = {})
        возвращает subcribe(fn), dispatch(action), getState() - функции reducer

    dom.js - Класс с основными функциями
      Класс Dom(selector),
      методы:
        html(html) - Задает в selector html
        text(text) - Получает/изменяет текстовый контент инстанса
        clear() - Чистит в selector html
        on(eventType, callback) - Добавляет на selector событие
        off(eventType, callback) - Удаляет на selector событие
        find(selector) - Находит selector в DOM
        append(node) - Добавляет node в конец selector
        data() - getter возвращает dataset инстанса
        closest(selector) - возвращает ближайшего родителя с заданным selector
        getCoords() - возвращает все координаты элемента
        findAll(selector) - возвращает массив со веми элементами DOM, соответствующими selector
        css(styles = {}) - задает элементу css стили
        getStyles(styles = []) - преобразует стили из styles
        id(parse) - Преобразует data-id="12:31" => [12, 31]
        focus() - вызывает this.$el.focus
        attr(name, value) - если value, изменяет атрибут name в $el на value, если не value, возвращает атрибут name
        addClass(className) - Добавляет класс
        removeClass(className) - Удаялет класс
       
      !!! Экспортирует функцию $(selector), реализующую класс
        $.create(tagName, classes='') - Создает эелемент с заданными классами и делает его инстансом класса Dom


    DomListener.js - Класс для работы с событиями
      !!! Экспортирует класс DomListener($root, listeners = [])
        методы:
          initDOMListeners() - Добавляет события на эелемент
          removeDOMListeners() - Удаляет события с элемента

    Emitter.js - Вспомогательный класс связывающий компоненты между собой. (Observered Pattern)
      !!! Экспортирует класс Emitter(listeners = {})
        методы:
          emit(event, ...args) - Уведомляет всех слушателей, если они есть
          subcribe(event, fn) - Подписывает на уведомления и добавляет нового слушателя


    ExcelComponents.js - 
      !!! Экспортирует класс ExcelComponent($root, options = {})
        методы:
          toHTML() - Возвращает шаблон HTML
          $emit(event, ...args) - Уведомляет слушатели про событие event
          $on(event, fn) - Подписывает на событие event
          $dispatch(action) - добавление изменений в store
          storehanged()
          isWatching(key) - проверяет массив subcribe на наличие key
          init() - Инициализирует компонент
          destroy() - Удаляет компонент и все слушатели


    ExcelStateComponent.js - 
      !!! Экспортирует класс ExcelStateComponent
        методы:
          get template() - получает state
          initState() - инициализирует state
          setState() - обновляет state и добавляет html шаблон в $root


    parse.js - конструкция, обеспечивающая функционал функций в formula в excel
      !!! Экспортирует функцию parse(value = '')


    StoreSubscriber.js - определенный класс, упрощающий добавление изменений в state (подобие subcribe из redux)
      !!! Экспортирует класс StoreSubscriber(store)
        методы:
          subscribeComponents(components) - подписка компонентов
          unsubscribeFromStore() - отписка компонентов


    util.js - Утилиты
      !!! Экспортирует все функции
        capitalize(string) - Делает первую букву строки заглавной 
        range(start, end) - Возвращает массив со всеми id выделенных ячеек
        storage(key, data = null) - если !data, то возвращает элемент из localStorage по key, если data, то изменяет localStorage по key на data
        isEqual(a, b) - сравнивает a и b
        camelToDashCase(str) - переводит camelCase в dashCase
        toInlineStyles(styles = {}) - трансформирует объект стилей в строку валидную для html атрибута style
        debounce(fn, wait) - debounce из redux


  **redux - ПАПКА redux
    actions.js - хранит action creaters для redux
      !!! Экспортирует actions creaters

    initialState - Объект начального состояния приложения
      !!! Экспортирует этот объект

    rootReducer.js - reducer
      !!! Экспортирует reducer

    types.js - хранит типы action
      !!! Экспортирует их


  **scss - ПАПКА со стилями